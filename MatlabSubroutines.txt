function binnedData = binIntensityConcentricRings(imagePath, eyeCenter, jayCenter, ringWidth)
    % imagePath: Path to the input image (JPEG file)
    % eyeCenter, jayCenter: Coordinates of the eye center
    % ringWidth: Width of each concentric ring
    
    % Read the input image
    image = imread(imagePath);
    
    % Convert the image to grayscale if it's in color
    if size(image, 3) == 3
        image = rgb2gray(image);
    end
    
    % Calculate distance from each pixel to the center
    [rows, cols] = size(image);
    [X, Y] = meshgrid(1:cols, 1:rows);
    distances = sqrt((X - eyeCenter).^2 + (Y - jayCenter).^2);
    
    % Determine ring indices based on distances
    ringIndices = ceil(distances / ringWidth);
    
    % Flatten the image and bin the intensity values based on ring indices
    intensityValues = double(image(:));
    binnedData = accumarray(ringIndices(:), intensityValues, [], @sum);
end

Main program here:

imagePath = 'input_image.jpg'; % Replace with the path to your image
eyeCenter = 150; % Replace with your specific eye center coordinates
jayCenter = 200; % Replace with your specific jay center coordinates
ringWidth = 10; % Replace with your desired ring width

binnedData = binIntensityConcentricRings(imagePath, eyeCenter, jayCenter, ringWidth);
disp(binnedData);

